{"ast":null,"code":"var _jsxFileName = \"/Users/macauley/hello-world/src/Game.js\";\nimport React from \"react\";\nimport GameGrid from \"./GameGrid.js\";\n\n// TODO: Import useState() hook\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Game() {\n  // TODO: Replace variables with state variables\n  const moves = new Array(9).fill(\"\");\n  const turn = \"X\";\n  function gridClick(whichSquare) {\n    // TODO: Replace with code to set the move and turn\n    alert(\"Clicked on \" + whichSquare);\n  }\n\n  // TODO: Add newGame() function here\n\n  // TODO: Make New Game button to call newGame() when clicked\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tic-Tac-Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(GameGrid, {\n      moves: moves,\n      click: gridClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Turn: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        className: turn,\n        children: turn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n}\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","GameGrid","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","moves","Array","fill","turn","gridClick","whichSquare","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","click","className","_c","$RefreshReg$"],"sources":["/Users/macauley/hello-world/src/Game.js"],"sourcesContent":["import React from \"react\";\nimport GameGrid from \"./GameGrid.js\";\n\n// TODO: Import useState() hook\n\nfunction Game() {\n\n   // TODO: Replace variables with state variables\n   const moves = new Array(9).fill(\"\");\n   const turn = \"X\";\n  \n   function gridClick(whichSquare) {\n      // TODO: Replace with code to set the move and turn\n      alert(\"Clicked on \" + whichSquare);\n   }\n\n   // TODO: Add newGame() function here\n  \n   // TODO: Make New Game button to call newGame() when clicked\n   return (\n      <>\n         <h1>Tic-Tac-Toe</h1>        \n         <GameGrid moves={moves} click={gridClick} />\n         <p>\n            Turn: <strong className={turn}>{turn}</strong>\n         </p>\n         <p>\n            <button>New Game</button>\n         </p>\n      </>\n   );\n}\n\nexport default Game;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,eAAe;;AAEpC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,SAASC,IAAIA,CAAA,EAAG;EAEb;EACA,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;EACnC,MAAMC,IAAI,GAAG,GAAG;EAEhB,SAASC,SAASA,CAACC,WAAW,EAAE;IAC7B;IACAC,KAAK,CAAC,aAAa,GAAGD,WAAW,CAAC;EACrC;;EAEA;;EAEA;EACA,oBACGT,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACGX,OAAA;MAAAW,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBf,OAAA,CAACF,QAAQ;MAACM,KAAK,EAAEA,KAAM;MAACY,KAAK,EAAER;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5Cf,OAAA;MAAAW,QAAA,GAAG,QACM,eAAAX,OAAA;QAAQiB,SAAS,EAAEV,IAAK;QAAAI,QAAA,EAAEJ;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACJf,OAAA;MAAAW,QAAA,eACGX,OAAA;QAAAW,QAAA,EAAQ;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC;EAAA,eACL,CAAC;AAET;AAACG,EAAA,GA1BQf,IAAI;AA4Bb,eAAeA,IAAI;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}